{"frames":[{"func":"rate_limits_per_minute()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"purrr::list_rbind(purrr::map(model, ~rate_limits_per_minute_engine(model = .x, \n    AI_tool = AI_tool, api_key = api_key)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_list_of_data_frames(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_check_list(x, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"obj_check_list(x, ..., arg = arg, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"purrr::map(model, ~rate_limits_per_minute_engine(model = .x, \n    AI_tool = AI_tool, api_key = api_key))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_(\"list\", .x, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, \n    call_with_cleanup(map_impl, environment(), .type, .progress, \n        n, names, i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    if (i == 0L) {\n    }\n    else { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_with_cleanup(map_impl, environment(), .type, .progress, \n    n, names, i)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rate_limits_per_minute_engine(model = .x, AI_tool = AI_tool, \n    api_key = api_key)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr2::req_user_agent(httr2::req_retry(httr2::req_body_json(httr2::req_headers(httr2::req_method(httr2::request(\"https://api.openai.com/v1/chat/completions\"), \n    \"POST\"), `Content-Type` = \"application/json\", Authorization = paste(\"Bearer\", \n    api_key)), body), is_transient = gpt_is_transient, ), \"AIscreenR (http://mikkelvembye.github.io/AIscreenR/)\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"is_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr2::req_retry(httr2::req_body_json(httr2::req_headers(httr2::req_method(httr2::request(\"https://api.openai.com/v1/chat/completions\"), \n    \"POST\"), `Content-Type` = \"application/json\", Authorization = paste(\"Bearer\", \n    api_key)), body), is_transient = gpt_is_transient, )","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"is_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr2::req_body_json(httr2::req_headers(httr2::req_method(httr2::request(\"https://api.openai.com/v1/chat/completions\"), \n    \"POST\"), `Content-Type` = \"application/json\", Authorization = paste(\"Bearer\", \n    api_key)), body)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"is_request(req)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr2::req_headers(httr2::req_method(httr2::request(\"https://api.openai.com/v1/chat/completions\"), \n    \"POST\"), `Content-Type` = \"application/json\", Authorization = paste(\"Bearer\", \n    api_key))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"modify_list(.req$headers, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"list2(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"paste(\"Bearer\", api_key)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"get_api_key()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"No API key found. Use set_api_key()\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    if (i == 0L) {\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(message, location = i, name = name, parent = cnd, \n    call = error_call, class = \"purrr_error_indexed\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in purrr::map(model, ~rate_limits_per_minute_engine(model = .x,  : \n\u001B[1mCaused by error in `get_api_key()`:\u001B[22m\n\u001B[33m!\u001B[39m No API key found. Use set_api_key()\n"}